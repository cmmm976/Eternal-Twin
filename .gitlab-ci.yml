# demurgos/node:latest
image: "demurgos/node@sha256:3fb2558894af289ff54c1c36866aa9b750d950181c3dc03804842dc20aaa56b7"

services:
  - "postgres:latest"

cache:
  paths:
    - ".cache/sccache/"
    - ".cargo/bin/"
    - ".cargo/registry/cache/"
    - ".cargo/registry/index/"
    - ".cargo/git/db/"
    - ".yarn/"

variables:
  CARGO_HOME: ".cargo"
  POSTGRES_DB: "etwindb"
  POSTGRES_USER: "etwin"
  POSTGRES_PASSWORD: "dev"
  RUSTFLAGS: "-C target-feature=-crt-static"

before_script:
  - "node --version"
  - "yarn --version"
  - "rustc --version"
  - "cargo --version"
  - "cargo fmt --version"
  - "cargo clippy --version"
  - "export SCCACHE_DIR=\"$(pwd)/.cache/sccache\""
  - "export RUSTC_WRAPPER=sccache"
  - "yarn install --immutable"
  - |
    cat >etwin.toml <<EOL
    [etwin]
    api = "postgres"
    secret = "dev_secret"
    http_port = 50320
    external_uri = "http://localhost:50320"

    [db]
    host = "postgres"
    port = 5432
    name = "${POSTGRES_DB}"
    user = "${POSTGRES_USER}"
    password = "${POSTGRES_PASSWORD}"

    [clients.eternalfest]
    display_name = "Eternalfest"
    app_uri = "http://localhost:50313"
    callback_uri = "http://localhost:50313/oauth/callback"
    secret = "eternalfest_secret"

    [auth.twinoid]
    client_id = "380"
    secret = "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"

    [forum]
    posts_per_page = 10
    threads_per_page = 20

    [forum.sections.fr_main]
    display_name = "Forum Général"
    locale = "fr-FR"
    EOL

stages:
  - "check"

lint:
  stage: "check"
  script:
    - |
      cargo fmt -- --check \
      && cargo clippy --all-targets --all-features -- -D warnings \
      && yarn run lint

test-rust:
  stage: "check"
  script:
    - |
      sccache --start-server \
      && cargo test --no-fail-fast -- -Z unstable-options --report-time \
      && sccache --stop-server

test-node:
  stage: "check"
  script:
    - |
      sccache --start-server \
      && yarn run test \
      && sccache --stop-server

build:
  stage: "check"
  script:
    - |
      sccache --start-server \
      && yarn --cwd packages/rest-server run main:build \
      && yarn --cwd packages/website run build \
      && sccache --stop-server
